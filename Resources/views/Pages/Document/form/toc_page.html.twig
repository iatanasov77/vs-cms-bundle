{% import "@VSApplication/Macros/tree.html.twig" as vs_tree %}

{{ form_start(form, { 'attr': {'id': 'form_toc_page'}} ) }}
    {{ form_widget(form.id) }}
    
    {% if form_errors(form) is not empty %}
        <div class="alert alert-block alert-danger fade in">
            <button type="button" class="close close-sm" data-dismiss="alert">
                <i class="icon-remove"></i>
            </button>
            <strong>{{ 'vs_application.form.errors_title' | trans( {},'VSApplicationBundle' ) }}</strong> {{ form_errors(form) }}
        </div>
    {% endif %}

    <div class="form-group">
        {{ form_label(form.locale, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        
        {{ form_widget(form.locale, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    {% set comboDataSourceUrl  = path('vs_cms_multipage_toc_page_easyui_combotree', {'documentId': documentId}) %}
    {% set comboTreePlaceholder = 'vs_cms.form.toc_page.parent_page_placeholder' | trans( {},'VSCmsBundle' ) %}
    <div class="form-group">
        {{ form_label( form.parent, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        
        {{ vs_tree.easyuiCombobox( form.parent, comboDataSourceUrl, item.parent ? item.parent.id : 0,
            {
                'elementSelector': '#toc_page_form_parent',
                'required': 'false',
                'multiple': 'false',
                'checkbox': 'false',
                'placeholder': comboTreePlaceholder
            }
        ) }}
    </div>

    <div class="form-group">
        {{ form_label( form.title, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        {{ form_widget( form.title, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    
    <div class="form-group">
        {{ form_label(form.text, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        
        {{ form_widget(form.text, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    {% do form.btnSave.setRendered() %}
    {% do form.btnApply.setRendered(false) %}
    {% do form.btnCancel.setRendered() %}
{{ form_end(form, {'render_rest': false}) }}
